import{R as w}from"./index.CqbGxsOR.js";const T=t=>{let e;const r=new Set,o=(i,p)=>{const g=typeof i=="function"?i(e):i;if(!Object.is(g,e)){const m=e;e=p??(typeof g!="object"||g===null)?g:Object.assign({},e,g),r.forEach(d=>d(e,m))}},a=()=>e,l={setState:o,getState:a,getInitialState:()=>h,subscribe:i=>(r.add(i),()=>r.delete(i))},h=e=t(o,a,l);return l},H=t=>t?T(t):T,$=t=>t;function j(t,e=$){const r=w.useSyncExternalStore(t.subscribe,()=>e(t.getState()),()=>e(t.getInitialState()));return w.useDebugValue(r),r}const O=t=>{const e=H(t),r=o=>j(e,o);return Object.assign(r,e),r},_=t=>t?O(t):O;function k(t,e){let r;try{r=t()}catch{return}return{getItem:a=>{var s;const f=h=>h===null?null:JSON.parse(h,void 0),l=(s=r.getItem(a))!=null?s:null;return l instanceof Promise?l.then(f):f(l)},setItem:(a,s)=>r.setItem(a,JSON.stringify(s,void 0)),removeItem:a=>r.removeItem(a)}}const b=t=>e=>{try{const r=t(e);return r instanceof Promise?r:{then(o){return b(o)(r)},catch(o){return this}}}catch(r){return{then(o){return this},catch(o){return b(o)(r)}}}},F=(t,e)=>(r,o,a)=>{let s={storage:k(()=>localStorage),partialize:n=>n,version:0,merge:(n,S)=>({...S,...n}),...e},f=!1;const l=new Set,h=new Set;let i=s.storage;if(!i)return t((...n)=>{console.warn(`[zustand persist middleware] Unable to update item '${s.name}', the given storage is currently unavailable.`),r(...n)},o,a);const p=()=>{const n=s.partialize({...o()});return i.setItem(s.name,{state:n,version:s.version})},g=a.setState;a.setState=(n,S)=>{g(n,S),p()};const m=t((...n)=>{r(...n),p()},o,a);a.getInitialState=()=>m;let d;const I=()=>{var n,S;if(!i)return;f=!1,l.forEach(c=>{var u;return c((u=o())!=null?u:m)});const v=((S=s.onRehydrateStorage)==null?void 0:S.call(s,(n=o())!=null?n:m))||void 0;return b(i.getItem.bind(i))(s.name).then(c=>{if(c)if(typeof c.version=="number"&&c.version!==s.version){if(s.migrate){const u=s.migrate(c.state,c.version);return u instanceof Promise?u.then(y=>[!0,y]):[!0,u]}console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}else return[!1,c.state];return[!1,void 0]}).then(c=>{var u;const[y,E]=c;if(d=s.merge(E,(u=o())!=null?u:m),r(d,!0),y)return p()}).then(()=>{v?.(d,void 0),d=o(),f=!0,h.forEach(c=>c(d))}).catch(c=>{v?.(void 0,c)})};return a.persist={setOptions:n=>{s={...s,...n},n.storage&&(i=n.storage)},clearStorage:()=>{i?.removeItem(s.name)},getOptions:()=>s,rehydrate:()=>I(),hasHydrated:()=>f,onHydrate:n=>(l.add(n),()=>{l.delete(n)}),onFinishHydration:n=>(h.add(n),()=>{h.delete(n)})},s.skipHydration||I(),d||m},P=F,x=_(P(t=>({flights:[],updateFlights:e=>t({flights:e}),airships:[],updateAirships:e=>t({airships:e}),clients:[],updateClients:e=>t({clients:e})}),{name:"data-storage",storage:k(()=>sessionStorage)}));async function J(){try{const t=await fetch("http://localhost:3001/flights");if(!t.ok)throw new Error(`HTTP error! Status: ${t.status}`);return await t.json()}catch(t){throw console.error("Error fetching flights:",t),t}}async function N(t){try{const e=await fetch("http://localhost:3001/flight",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!e.ok)throw new Error(`HTTP error! Status: ${e.status}`);const r=await e.text();return r?JSON.parse(r):{}}catch(e){throw console.error("Error adding flight:",e),e}}const C=t=>{const r=`; ${document.cookie}`.split(`; ${t}=`);if(r.length===2)return r.pop().split(";").shift()};export{J as a,N as b,C as g,x as u};
